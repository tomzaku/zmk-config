/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
        };

        prev_tab {
            bindings = <&kp LC(PG_UP)>;
            key-positions = <10 11>;
        };

        next_tab {
            bindings = <&kp LC(PG_DN)>;
            key-positions = <22 23>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T   |   |  Y  |  U   |  I  |  O  |  P  | RET |
            // | CTRL |  A  |  S  |  D  |  F  |  G   |   |  H  |  J   |  K  |  L  |  ;  |  '  |
            // | SHFT |  Z  |  X  |  C  |  V  |  B   |   |  N  |  M   |  ,  |  .  |  /  | ESC |
            //                    | ALT | GUI | BKSP |   | SPC | RSE  | LWR |

            bindings = <
  &kp TAB  &kp Q  &kp W     &kp E     &kp R       &kp T      &kp Y  &kp U      &kp I    &kp O     &kp P              &kp RET
&kp LCTRL  &kp A  &kp S     &kp D     &kp F       &kp G      &kp H  &kp J      &kp K    &kp L  &kp SEMI              &kp SQT
&kp LSHFT  &kp Z  &kp X     &kp C     &kp V       &kp B      &kp N  &kp M  &kp COMMA  &kp DOT  &kp FSLH  &mt RIGHT_SHIFT ESC
                         &kp LALT  &kp LGUI  &lt 2 BSPC  &kp SPACE  &mo 1      &mo 2
            >;
        };

        nav_symbol_layer {
            // -----------------------------------------------------------------------------------------
            // |  `   |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |  -  |  =  |  \  |  [  |  ]  |   | LFT | DWN |  UP | RGT | PUP | INS  |
            // | SHFT |  _  |  +  |  |  |  {  |  }  |   | HOM | END |     |     | PDN | DEL  |
            //                    |     |     |     |   |     |     |     |

            bindings = <
&kp GRAVE   &kp EXCL     &kp AT  &kp HASH  &kp DLLR  &kp PRCNT  &kp CARET  &kp AMPS  &kp ASTERISK   &kp LPAR   &kp RPAR  &kp DEL
   &trans  &kp MINUS  &kp EQUAL  &kp BSLH  &kp LBKT   &kp RBKT   &kp LEFT  &kp DOWN        &kp UP  &kp RIGHT  &kp PG_UP  &kp INS
   &trans  &kp UNDER   &kp PLUS  &kp PIPE  &kp LBRC   &kp RBRC   &kp HOME   &kp END        &trans     &trans  &kp PG_DN   &trans
                                   &trans    &trans     &trans     &trans    &trans        &trans
            >;
        };

        number_layer {
            // -----------------------------------------------------------------------------------------
            // |  ~   |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |      |
            // | CTRL | BT1 | BT2 | BT3 | BT4 | BT5 |   |  .  |  4  |  5  |  6  |  +  |  =   |
            // | SHFT |BTCLR|     |     |     |     |   |  0  |  1  |  2  |  3  |  -  |  /   |
            //                    |     |     |     |   |     |  .  |  0  |

            bindings = <
&kp TILDE        &kp N1        &kp N2        &kp N3        &kp N4        &kp N5   &kp N6   &kp N7  &kp N8  &kp N9        &kp N0         &trans
   &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &kp DOT   &kp N4  &kp N5  &kp N6   &kp KP_PLUS   &kp KP_EQUAL
   &trans    &bt BT_CLR        &trans        &trans  &kp C_VOL_DN  &kp C_VOL_UP   &kp N0   &kp N1  &kp N2  &kp N3  &kp KP_MINUS  &kp KP_DIVIDE
                                             &trans        &trans        &trans   &trans  &kp DOT  &kp N0
            >;
        };
    };
};
